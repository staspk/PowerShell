git fsck --lost-found					=>  Recover/restore dangling objects (trees/commits). Local Grace Period: 2 weeks. Github Remote: up to 30 days.

git remote prune origin					=>	Deletes / stops tracking branches locally that have been deleted on remote.
git branch -r							=>	This Git command will show you remote branches. 
git branch --merged						=>  Lists branches that have been merged into the current branch on remote.

git log --oneline -4					=>	See list of commits
git log --oneline --graph --decorate    =>  See the entire thing.
git show cbb0c31						=>  Prints out changes in that commit

git reset --mixed HEAD~1 				=>	"I want to re-do my last push" ie: reverts back before the last commit/push. Does not alter remote.
git reset --hard backup/before-change   =>  "I want to overwrite main with my backup"


"I need to merge the last n commits" => {
	git reset --soft HEAD~n									# n == (total_commits - 1) [like in a for-loop]
	git commit --amend
}
"I need to merge non-successive commits" => {
	git stash												# do if you have uncommited changes
	git rebase -i HEAD~n									# interactice mode. lists commits oldest to newest.
	Reorder commits from bottom -> up. base should be oldest commit - the one on top. "squash" will merge the line up.
}
git push --force											# I am alone. Force remote branch to look exactly like my local branch, no exceptions
git push --force-with-lease <remote_name> <branch_name>		# Force only if the remote branch hasn't been updated by someone else since you last fetched from it
git reflog													# see this context's history



SUBMODULES
{
ADD SUBMODULE:
	1. git submodule add <repository-url> <path-to-submodule>
		e.g: git submodule add https://github.com/staspk/PowerShell.git ./Windows11/.powershell/PowerShell
	2. make "branch = main" explicit for each submodule in .gitmodules
	3. git submodule update --init --recursive --remote [--force ?]

RECURSIVE LOCAL UPDATE OF ALL SUBMODULES FROM REMOTE:
	git submodule update --recursive --remote --force
	force is destructive of local changes (but should be your default go-to)

PUSH CHANGES UP:
	go down to the submodule, do a pull request in a separate branch, ideally

TRUE DELETE OF SUBMODULES:
	1. delete .gitmodules
	2. delete everything under .git/modules/
	3. Push to remote
}
